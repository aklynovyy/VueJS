Код из видео урока
Example.vue
<template>
  <div>
    <h1>{{ message }}</h1>
    <app-input :msg="message" @messChange="message = $event"></app-input>
  </div>
</template>

<script>
  import Input from './Field.vue';

  export default {
    data() {
      return {
        message: 'Пробный текст'
      }
    },
    components: {
      'app-input': Input
    }
  }
</script>
Field.vue
<template>
  <div>
    <input type="text" :value="msg" @input="changeMess">
    <p>{{ mess }}</p>
  </div>
</template>

<script>
  export default {
    props: ['msg'],
    data () {
      return {
        mess: ''
      }
    },
    methods: {
      changeMess(event) {
        this.mess = event.target.value;
        this.$emit('messChange', this.mess);
      }
    }
  }
</script>


Домашнее задание к видео уроку

Передача данных в компоненты
Если вы выполнили задание в предыдущем видео уроке, то у вас должна быть готова шапка и несколько блоков сайта. Если нет, то скопируйте код из предыдущего задания в прошлом видео уроке.

Ваша задача немного усовершенствовать нашу программу. Нам необходимо во все наши компоненты передавать данные. К примеру, в шапку мы передаем какой-либо текст, который в последствии выводиться в заголовке h1. 

С блоками сделаем все немного сложнее. В App.vue создайте массив из названий и какого-либо дополнительного текста. Теперь выводите блоки при помощи циклов в Vue.js и при этом передавайте параметры из массива (название и дополнительный текст). В файле с блоками получите эти данные и выведите их как на фото ниже (через горизонтальную линию hr).

https://itproger.com/img/courses/components-links-vue.png

В прошлом задании у нас было три блока, но теперь 4, так как мы просто добавили на один больше элемент в массив.